; *************************************************************
; *** Scatter-Loading Description File for TM4C123GH6PM     ***
; *************************************************************
; Author: Jorgis Theodoulou
;
; This scatter file will essentially be a copy of the one generated by Keil uVision.
; However, I've changed names and added comments to learn how this file works, and what type of memory exists

; A load region(startup time) is a place where code/data resides before they are copied into the executions regions (runtime)
; Load regions contain one or more execution regions
; First a label is given (I think the label is arbitrary?), then the locationn and MAXIMUM size of the Flash memory is given (which are in the data sheet of the TM4C123GH6PM (Section 2.4 - Memory Model))
; Flash memory is a type of memory that retains its data even when the power is switched off, so it is good as a load region.

; Also remember that address 0x0 is special. It is where the vector table is located, which contains among other things the initial stack pointer and the Reset Handler

LOAD_REGION 0x00000000 0x00040000 {
    EXECUTION_REGION_ROM 0x00000000 0x00040000 { ; The execution region is at the same location as the load region.
        *.o (RESET, +FIRST) ; The RESET AREA in startup_TM4C123.s is apparently arbitrarily named. It just needs to be placed at the first location in ROM at address 0x0.
        *(InRoot$$Sections) ; Many sections MUST be placed in a root region (same location during load and execution time). The names of these sections change (per release of armlink). This name is, however, future-proof accross releases.
        .ANY (+RO) ; .ANY matches unassigned sections. +RO selects read-only sections
        .ANY (+XO) ;  +XO matches execution-only sections.
    }

    ; Now the Read-Write execution region is defined.
    EXECUTION_REGION_RAM 0x20000000 0x00008000 { ; The datasheet gives the correct location and correct size (again, this is the maximum size in the scatter file)
        .ANY (+RW +ZI) ; Matchh all Read-Write AND Zero-Initiated sections

    }

}

; That's all we need (for now?).
; Now this file must be provided to armlink
